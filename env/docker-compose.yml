services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks: [backend]

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    command: ["start-dev", "--http-enabled=true", "--http-port=8080"]
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_PROXY_HEADERS: xforwarded
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks: [backend]

  agent_api:
    build:
      context: ..
      dockerfile: env/docker/Dockerfile.vt-server
    command:
      - "--mode=agent"
      - "--agent-addr=:8444"
      - "--db=${POSTGRES_DSN}"
      - "--rules=${RULES_DIR}"
      - "--mtls-ca=/certs/ca.pem"
      - "--mtls-ca-key=/certs/ca.key"
      - "--mtls-cert-ttl=${MTLS_CERT_TTL}"
    environment:
      RULES_DIR: /app/rules
    volumes:
      - ./conf/mtls/issuer:/certs:ro
    depends_on:
      - db
    networks: [backend]

  dashboard_api:
    build:
      context: ..
      dockerfile: env/docker/Dockerfile.vt-server
    command:
      - "--mode=dashboard"
      - "--dashboard-addr=:8081"
      - "--db=${POSTGRES_DSN}"
      - "--rules=${RULES_DIR}"
    environment:
      RULES_DIR: /app/rules
    depends_on:
      - db
    networks: [backend]

  mtls_gateway:
    image: nginx:1.27-alpine
    volumes:
      - ./conf/mtls/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/mtls/issuer:/etc/nginx/certs:ro
    depends_on:
      - agent_api
    ports:
      - "443:443"
    networks: [frontend, backend]

  dashboard_oidc:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
    depends_on:
      - dashboard_api
      - keycloak
    environment:
      OAUTH2_PROXY_PROVIDER: keycloak-oidc
      OAUTH2_PROXY_OIDC_ISSUER_URL: http://keycloak:8080/realms/${KEYCLOAK_REALM}
      OAUTH2_PROXY_CLIENT_ID: ${DASHBOARD_CLIENT_ID}
      OAUTH2_PROXY_CLIENT_SECRET: ${DASHBOARD_CLIENT_SECRET}
      OAUTH2_PROXY_COOKIE_SECRET: ${DASHBOARD_COOKIE_SECRET}
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_UPSTREAMS: http://dashboard_api:8081/
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:8443
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_REVERSE_PROXY: "true"
    ports:
      - "8443:8443"
    networks: [frontend, backend]

networks:
  backend:
  frontend:

volumes:
  db_data:
  stepca_data:

