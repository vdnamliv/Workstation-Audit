upstream admin_api {
  # If compose: server workstation-audit:8000;
  server my_api:8000;
  keepalive 64;
}

# Admin API via oauth2-proxy (SSO)
upstream oidc_proxy {
  # If running in Docker with compose: server myapi_oidc_proxy:4180;
  server myapi_oidc_proxy:4180;
  keepalive 64;
}

# Step CA UI/API (ACME + API on :9000)
upstream stepca_upstream {
  # If compose: server stepca:9000;
  server stepca:9000;
  keepalive 64;
}

# Keycloak (admin console lives at /admin/)
upstream keycloak_upstream {
  # If compose: server keycloak:8080;
  server keycloak:8080;
  keepalive 64;
}

# =======================================================
# 1) Agent PUBLIC issuance API — Step CA (no client mTLS)
#    Only for enrollment/ACME. Keep it separate hostname.
# =======================================================
server {
  listen 443 ssl http2;
  server_name agent-ca.yourdomain.com;

  ssl_certificate     /etc/letsencrypt/live/agent-ca.yourdomain.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/agent-ca.yourdomain.com/privkey.pem;

  # No ssl_verify_client here — ACME must be publicly reachable

  # (Recommended) Basic request shaping / rate limits
  # Define a small shared zone: 10 req/s burst 20 per IP (tune for your load)
  limit_req_zone $binary_remote_addr zone=acme_zone:10m rate=10r/s;

  # Health
  location = /health {
    proxy_pass http://stepca_upstream/health;
  }

  # ACME directory & issuance endpoints (examples below)
  # You can keep this broad (/), or explicitly allow only well-known Step CA paths:
  #  - /acme/<provisioner>/directory
  #  - /acme/
  #  - /1.0/* (Step API)
  location / {
    limit_req zone=acme_zone burst=20 nodelay;

    proxy_set_header Host                $host;
    proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto   $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_read_timeout 300s;

    proxy_pass http://stepca_upstream;
  }
}

# ==============================================
# 2) Admin surface — all admin portals in one
#    Normal TLS + SSO (via oauth2-proxy) for
#    your admin API; other UIs keep their own
#    login (Keycloak, Step CA).
# ==============================================
server {
  listen 443 ssl http2;
  server_name admin.yourdomain.com;

  ssl_certificate     /etc/letsencrypt/live/admin.yourdomain.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/admin.yourdomain.com/privkey.pem;

  # ---- Optional: an admin landing UI, to be added ----
  location / {
    proxy_set_header Host                $host;
    proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto   $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_pass http://admin_ui_upstream;
  }

  # ---- Admin API via oauth2-proxy (SSO) ----
  # oauth2-proxy will handle the Keycloak login and forward to your admin API upstreams.
  # If oauth2-proxy is configured with upstream = http://myapi:8081/, this just terminates on it.
  location /api/ {
    proxy_set_header Host                $host;
    proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto   $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_read_timeout 300s;

    proxy_pass http://oidc_proxy;
  }

  # ---- Keycloak Admin Console (keeps its own login) ----
  # Makes the KC admin console available under /auth/
  location /auth/ {
    proxy_set_header Host                $host;
    proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto   $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_pass http://keycloak_upstream/;
  }

  # ---- Step CA UI/API for admins (its own auth) ----
  # Mount under /stepca/ for convenience
  location /stepca/ {
    # Strip prefix so the Step CA app sees root paths
    rewrite ^/stepca/(.*)$ /$1 break;

    proxy_set_header Host                $host;
    proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto   $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_read_timeout 300s;

    proxy_pass http://stepca_upstream;
  }
}

